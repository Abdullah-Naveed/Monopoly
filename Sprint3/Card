import java.util.ArrayList;
import java.util.Random;

public class Card {
	public Square sitee=new Square();
	int size= 16;
	ArrayList<Integer> list = new ArrayList<Integer>(size);
	
	 ArrayList<Integer> numbers = new ArrayList<Integer>(); 
		public static final int CMD_GO = 0;
		public static final int CMD_GO_KENT = 1;
		public static final int CMD_JAIL = 2;
		public static final int CMD_PAY_HOSPITAL = 3;
		public static final int CMD_PAY_DOCTOR = 4;
		public static final int CMD_PAY_INSURENCE = 5;
		public static final int CMD_BANKERROR = 6;
		public static final int CMD_ANNUITY = 7;
		public static final int CMD_INHERIT = 8;
		public static final int CMD_STOCK= 9;
		public static final int CMD_RECEIVE_INTEREST = 10;
		public static final int CMD_INTEREST = 11;
		public static final int CMD_BEAUTYCONTEST = 12;
		public static final int CMD_BIRTHDAY = 13;
		public static final int CMD_JAILFREE=14;
		public static final int CMD_FINE = 15;
		
		 private final String[] CARDS = 
		{		"Advance to Go",
				"Go back to Old Kent Road",
				"Go to jail. Move directly to jail. Do not pass Go. Do not collect £200."
				,"Pay hospital £100."
				,"Doctor's fee. Pay £50."
				,"Pay your insurance premium £50."
				,"Bank error in your favour. Collect £200."
				,"Annuity matures. Collect £100."
				,"You inherit £100."
				,"From sale of stock you get £50."
				,"Receive interest on 7% preference shares: £25."
				,"Income tax refund. Collect £20."
				,"You have won second prize in a beauty contest. Collect £10."
				,"It is your birthday. Collect £10 from each player."
				,"Get out of jail free. This card may be kept until needed or sold."
				,"Pay a £10 fine or take a Chance"
		};
		Card () {
			super();
			
		    
			return;
		}
	 public  Object[] ShuffleDeck(){
	  
		 Random randomGenerator = new Random();
		 while (numbers.size() < 16) {

		     int random = randomGenerator .nextInt(16);
		     if (!numbers.contains(random)) {
		         numbers.add(random);
		         
		     }
		 }
		 Object[] temp=numbers.toArray();
		 
		  
	
	        return temp;

		 
	}
	 public int  GettingCards(Object[] temp)
	 {
		 
		
		 
		 int cardnumber=(int) temp[0];
		 for(int j=0;j<temp.length-1;j++)
		 {
			 temp[j]=temp[j+1];
			 if(j==temp.length-1)
			 {
				 temp[j]=cardnumber;
			 }
			 
		 }
		return cardnumber;
		 
		 
	 }

		    public static void main(String[] args) {
//		    	Card s = new Card();
//		    
//		    	 Object[] temp=s.ShuffleDeck();
//		    	 for(int i=0;i<temp.length;i++){
//             System.out.println(s.GettingCards(temp));
//		    	 }
//		 
		    }
		    public void CardCond(Object[] temp)
		    {
		    	Card s=new Card();
		    	
		        do {
		        
		    	switch (s.GettingCards(temp))
		    	{
		    	case CMD_GO:
		    		System.out.println("hello");
		    		break;
		    	case CMD_GO_KENT:
		    		
		    		
		    		break;
		    	case CMD_JAIL:
		    		
		    		break;
		    	
		    	case CMD_PAY_HOSPITAL :
		    		
		    		break;
		    	
		    	case CMD_PAY_DOCTOR :
		    		
		    		break;
		    	
		    	case CMD_PAY_INSURENCE:
		    		
		    		break;
		    	
		    	case CMD_BANKERROR:
		    		
		    		break;
		    	
		    	case  CMD_ANNUITY :
		    		
		    		break;
		    	
		    	case  CMD_INHERIT :
		    		
		    		break;
		    	
		    	case CMD_STOCK:
		    		
		    		break;
		    	
		    	case CMD_RECEIVE_INTEREST :
		    		
		    		break;
		    	
		    	case CMD_INTEREST:
		    		
		    		break;
		    	
		    	case CMD_BEAUTYCONTEST :
		    		
		    		break;
		    	
		    	case CMD_BIRTHDAY :
		    		
		    		break;
		    	
		    	case CMD_JAILFREE:
		    		
		    		break;
		    	
		    	case CMD_FINE:
		    	break;
		    	
		    	}
		        }
	
		    while(sitee.getName().equals("Comminity Chest"));
		
		
	}

}


